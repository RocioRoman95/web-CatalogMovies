{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MovieService {\n  constructor() {\n    this.movies = [{\n      id: 1,\n      title: 'Avengers: Endgame',\n      releaseDate: '2019-04-26',\n      genre: 'action',\n      description: 'The Avengers face their biggest challenge yet.'\n    }, {\n      id: 2,\n      title: 'Inception',\n      releaseDate: '2010-07-16',\n      genre: 'sci-fi',\n      description: 'A thief who enters the dreams of others to steal secrets from their subconscious.'\n    }, {\n      id: 3,\n      title: 'The Dark Knight',\n      releaseDate: '2008-07-18',\n      genre: 'action',\n      description: 'Batman faces off against the Joker, a criminal mastermind.'\n    }, {\n      id: 4,\n      title: 'Interstellar',\n      releaseDate: '2014-11-07',\n      genre: 'sci-fi',\n      description: 'A group of astronauts embark on a journey to save humanity.'\n    }, {\n      id: 5,\n      title: 'The Matrix',\n      releaseDate: '1999-03-31',\n      genre: 'sci-fi',\n      description: 'A hacker learns the truth about the reality he lives in.'\n    }];\n  }\n  getMovies() {\n    return this.movies;\n  }\n  getMovieById(id) {\n    return this.movies.find(movie => movie.id === id);\n  }\n  static {\n    this.ɵfac = function MovieService_Factory(t) {\n      return new (t || MovieService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MovieService,\n      factory: MovieService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["MovieService","constructor","movies","id","title","releaseDate","genre","description","getMovies","getMovieById","find","movie","factory","ɵfac","providedIn"],"sources":["C:\\Users\\usuario\\OneDrive\\Escritorio\\RocioRoman_catalog-movies\\src\\app\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Movie } from './movie';\n\n@Injectable({\n  providedIn: 'root'  \n})\n\n\nexport class MovieService {\n  private movies: Movie[] = [\n    { id: 1, title: 'Avengers: Endgame', releaseDate: '2019-04-26', genre: 'action', description: 'The Avengers face their biggest challenge yet.' },\n    { id: 2, title: 'Inception', releaseDate: '2010-07-16', genre: 'sci-fi', description: 'A thief who enters the dreams of others to steal secrets from their subconscious.' },\n    { id: 3, title: 'The Dark Knight', releaseDate: '2008-07-18', genre: 'action', description: 'Batman faces off against the Joker, a criminal mastermind.' },\n    { id: 4, title: 'Interstellar', releaseDate: '2014-11-07', genre: 'sci-fi', description: 'A group of astronauts embark on a journey to save humanity.' },\n    { id: 5, title: 'The Matrix', releaseDate: '1999-03-31', genre: 'sci-fi', description: 'A hacker learns the truth about the reality he lives in.' }\n  ];\n\n  constructor() { }\n\n  getMovies(): Movie[] {\n    return this.movies;\n  }\n\n  getMovieById(id: number): Movie | undefined {\n    return this.movies.find(movie => movie.id === id);\n  }\n}"],"mappings":";AAQA,OAAM,MAAOA,YAAY;EASvBC,YAAA;IARQ,KAAAC,MAAM,GAAY,CACxB;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,WAAW,EAAE,YAAY;MAAEC,KAAK,EAAE,QAAQ;MAAEC,WAAW,EAAE;IAAgD,CAAE,EAChJ;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,WAAW;MAAEC,WAAW,EAAE,YAAY;MAAEC,KAAK,EAAE,QAAQ;MAAEC,WAAW,EAAE;IAAmF,CAAE,EAC3K;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,iBAAiB;MAAEC,WAAW,EAAE,YAAY;MAAEC,KAAK,EAAE,QAAQ;MAAEC,WAAW,EAAE;IAA4D,CAAE,EAC1J;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,cAAc;MAAEC,WAAW,EAAE,YAAY;MAAEC,KAAK,EAAE,QAAQ;MAAEC,WAAW,EAAE;IAA6D,CAAE,EACxJ;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,WAAW,EAAE,YAAY;MAAEC,KAAK,EAAE,QAAQ;MAAEC,WAAW,EAAE;IAA0D,CAAE,CACpJ;EAEe;EAEhBC,SAASA,CAAA;IACP,OAAO,IAAI,CAACN,MAAM;EACpB;EAEAO,YAAYA,CAACN,EAAU;IACrB,OAAO,IAAI,CAACD,MAAM,CAACQ,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACR,EAAE,KAAKA,EAAE,CAAC;EACnD;;;uBAjBWH,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAY,OAAA,EAAZZ,YAAY,CAAAa,IAAA;MAAAC,UAAA,EAJX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}